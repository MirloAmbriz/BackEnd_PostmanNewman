{
	"info": {
		"_postman_id": "0695bb8d-0d23-4a01-b885-712ee5274f7e",
		"name": "ToDoist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Wizeline project",
			"item": [
				{
					"name": "Get active tasks",
					"item": [
						{
							"name": "Get active tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Checking HTTP status code to be success - positive scenario\r",
											"pm.test(\"Status code is 2xx\", function () {\r",
											"    pm.response.to.be.success;\r",
											"});\r",
											"\r",
											"//Checking response time - positive scenario\r",
											"pm.test(\"Response time is less than 250ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(250);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{basedURL}}",
									"host": [
										"{{basedURL}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create a new task",
					"item": [
						{
							"name": "Create a new task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Checking HTTP status code to be success - positive scenario\r",
											"pm.test(\"Status code is 2xx\", function () {\r",
											"    pm.response.to.be.success;\r",
											"});\r",
											"\r",
											"//Getting task content - positive scenario\r",
											"var jsonData = pm.response.json();\r",
											"var content = pm.environment.get(\"TaskContent\")\r",
											"pm.test(\"The task content is correct\", function () {\r",
											"    pm.expect(jsonData.content).to.eql(content);\r",
											"});\r",
											"\r",
											"//Task should not be the same as expected due to ID is changing contantly - negative scenario\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"The assigner is 0 as expected\", function () {\r",
											"    pm.expect(jsonData.assigner).to.eql(4674317314); \r",
											"});\r",
											"\r",
											"pm.environment.set(\"TaskId\" , jsonData.id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Requested-id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\" : \"{{TaskContent}}\"\r\n}"
								},
								"url": {
									"raw": "{{basedURL}}",
									"host": [
										"{{basedURL}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get an active task",
					"item": [
						{
							"name": "Get an active task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Checking HTTP Code response - positive scenario\r",
											"pm.test(\"Status code is 2xx\", function () {\r",
											"    pm.response.to.be.success;\r",
											"});\r",
											"\r",
											"//it is almost impossible to expect 1 ms as response - Negative scenario\r",
											"pm.test(\"Response time is less than 1ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1);\r",
											"});\r",
											"\r",
											"//This is a valid scenario to be the variable ID\r",
											"var id = pm.environment.get(\"TaskId\");\r",
											"pm.test(\"Active Task ID is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{basedURL}}/{{TaskId}}",
									"host": [
										"{{basedURL}}"
									],
									"path": [
										"{{TaskId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update a task",
					"item": [
						{
							"name": "Update a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Response should be 204/no content\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"//HTTP Code expected is 204 - positive scenario\r",
											"pm.test(\"Status code is 204 as expected / no content\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Requested-id",
										"value": " $(uuidgen",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\":\"{{TaskContentUpdated}}\"\r\n}"
								},
								"url": {
									"raw": "{{basedURL}}/{{TaskId}}",
									"host": [
										"{{basedURL}}"
									],
									"path": [
										"{{TaskId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Close task",
					"item": [
						{
							"name": "Close task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Code expected to be 2-4 - positive scenario\r",
											"pm.test(\"Status code is 204 as expected / task was closed\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//Body is empty as expected - Positive scenario\r",
											"pm.test(\"Body is empty as expected\", function () {\r",
											"    pm.response.to.have.body(\"\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{basedURL}}/{{TaskId}}/close",
									"host": [
										"{{basedURL}}"
									],
									"path": [
										"{{TaskId}}",
										"close"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reopen a task",
					"item": [
						{
							"name": "Reopen a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//positive scenario\r",
											"pm.test(\"Status code is 204 as expected / task was reopened\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											"\r",
											"//Checking body content, body should be empty / negative scenario\r",
											"var content = pm.environment.get(\"TaskContentUpdated\");\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.content).to.eql(content);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{basedURL}}/{{TaskId}}/reopen",
									"host": [
										"{{basedURL}}"
									],
									"path": [
										"{{TaskId}}",
										"reopen"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete a task",
					"item": [
						{
							"name": "Delete a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//positive scenario\r",
											"pm.test(\"Status code is 204 as expected / task was deleted\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{basedURL}}/{{TaskId}}",
									"host": [
										"{{basedURL}}"
									],
									"path": [
										"{{TaskId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{Token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "cd0aee717fb874a4147e1d0518173dcab2644d93",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}